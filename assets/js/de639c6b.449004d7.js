"use strict";(self.webpackChunkrecaller=self.webpackChunkrecaller||[]).push([[1957],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>d});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(o),d=r,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return o?n.createElement(h,i(i({ref:t},c),{},{components:o})):n.createElement(h,i({ref:t},c))}));function d(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=o[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},3337:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>k,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=o(7462),r=(o(7294),o(3905));const a={},i="Swizzling",l={unversionedId:"framework/docusaurus/swizzling",id:"framework/docusaurus/swizzling",title:"Swizzling",description:"Overview",source:"@site/docs/framework/docusaurus/6_swizzling.mdx",sourceDirName:"framework/docusaurus",slug:"/framework/docusaurus/swizzling",permalink:"/recaller/docs/framework/docusaurus/swizzling",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/framework/docusaurus/6_swizzling.mdx",tags:[],version:"current",lastUpdatedAt:1759074662,formattedLastUpdatedAt:"Sep 28, 2025",sidebarPosition:6,frontMatter:{},sidebar:"default",previous:{title:"Styling and Layout",permalink:"/recaller/docs/framework/docusaurus/styling-and-layout"},next:{title:"Deployment",permalink:"/recaller/docs/framework/docusaurus/deployment"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:'<Color color="var(--not-require-but-good-to-know-font-color)"> Why is it called swizzling? </Color>',id:"-why-is-it-called-swizzling-",level:3},{value:"Swizzling Process",id:"swizzling-process",level:2},{value:"Ejecting",id:"ejecting",level:3},{value:'<Color color="var(--not-nesary-for-now-future-font-color)"> Re-Swizzling </Color>',id:"-re-swizzling-",level:4},{value:"Wrapping",id:"wrapping",level:3},{value:"What is safe to swizzle?",id:"what-is-safe-to-swizzle",level:2},{value:'<Color color="var(--not-require-but-good-to-know-font-color)"> Why is it risky? </Color>',id:"-why-is-it-risky-",level:3},{value:'<Color color="var(--not-nesary-for-now-future-font-color)"> Which component should I swizzle? </Color>',id:"-which-component-should-i-swizzle-",level:2},{value:"Wrapping your site with <code>&lt;Root&gt;</code>",id:"wrapping-your-site-with-root",level:2}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},m=c("Color"),u=c("Admonition"),d=c("Tabs"),h=c("TabItem"),y={toc:p};function k(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},y,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"swizzling"},"Swizzling"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"This section is similar to ",(0,r.kt)("a",{parentName:"p",href:"styling-and-layout"},"Styling and Layout"),", but this time, we will write actual React code instead of playing with stylesheets."),(0,r.kt)("p",null,"In practice, swizzling allows to swap a theme component with your own implementation, and it comes in 2 patterns:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ejecting"},"Ejecting"),": creates a ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," copy ")," of the original theme component, which you can ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," fully customize ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#wrapping"},"Wrapping"),": creates a ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," wrapper ")," around the original theme component, which you can ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," enhance "))),(0,r.kt)(u,{type:"tip",title:"tip",mdxType:"Admonition"},(0,r.kt)("p",null,"Prefer ",(0,r.kt)("a",{parentName:"p",href:"#wrapping"},"wrapping")," whenever possible: the amount of code to maintain is smaller.")),(0,r.kt)("h3",{id:"-why-is-it-called-swizzling-"},(0,r.kt)(m,{color:"var(--not-require-but-good-to-know-font-color)",mdxType:"Color"}," Why is it called swizzling? ")),(0,r.kt)("p",null,"The name comes from Objective-C and Swift-UI: method swizzling is the process of changing the implementation of an existing selector (method)."),(0,r.kt)("p",null,"For Docusaurus, component swizzling means providing an alternative component that takes precedence over the component provided by the theme."),(0,r.kt)("p",null,"You can think of it as ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Monkey_patch"},"Monkey Patching")," for React components, enabling you to override the default implementation.\nGatsby has a similar concept called ",(0,r.kt)("a",{parentName:"p",href:"https://www.gatsbyjs.com/docs/how-to/plugins-and-themes/shadowing/"},"theme shadowing"),"."),(0,r.kt)(u,{type:"tip",title:"tip",mdxType:"Admonition"},(0,r.kt)("p",null,"To gain a deeper understanding of this, you have to understand ",(0,r.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/advanced/client#theme-aliases"},"how theme components are resolved"),".")),(0,r.kt)("h2",{id:"swizzling-process"},"Swizzling Process"),(0,r.kt)("p",null,"Docusaurus provides an convenient interactive CLI to swizzle components."),(0,r.kt)("p",null,"You generally only need to remember the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=",title:""},"docusaurus swizzle\n")),(0,r.kt)("p",null,"It will ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," generate a new component ")," your ",(0,r.kt)("inlineCode",{parentName:"p"},"src/theme")," directory,\nwhich should look like this example:"),(0,r.kt)(d,{mdxType:"Tabs"},(0,r.kt)(h,{value:"Ejecting",label:"Ejecting",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=src/theme/Footer/index.js showLineNumbers",title:"src/theme/Footer/index.js",showLineNumbers:!0},'import React from "react";\nimport { useThemeConfig } from "@docusaurus/theme-common";\nimport FooterLinks from "@theme/Footer/Links";\nimport FooterLogo from "@theme/Footer/Logo";\nimport FooterCopyright from "@theme/Footer/Copyright";\nimport FooterLayout from "@theme/Footer/Layout";\n\nfunction Footer() {\n  const { footer } = useThemeConfig();\n  if (!footer) {\n    return null;\n  }\n  const { copyright, links, logo, style } = footer;\n  return (\n    <FooterLayout\n      style={style}\n      links={links && links.length > 0 && <FooterLinks links={links} />}\n      logo={logo && <FooterLogo logo={logo} />}\n      copyright={copyright && <FooterCopyright copyright={copyright} />}\n    />\n  );\n}\nexport default React.memo(Footer);\n'))),(0,r.kt)(h,{value:"Wrapping",label:"Wrapping",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=src/theme/SomeComponent.js showLineNumbers",title:"src/theme/SomeComponent.js",showLineNumbers:!0},'import React from "react";\nimport Footer from "@theme-original/Footer";\n\nexport default function FooterWrapper(props) {\n  return (\n    <>\n      <Footer {...props} />\n    </>\n  );\n}\n')))),(0,r.kt)(u,{type:"tip",title:"later",icon:"",mdxType:"Admonition"},(0,r.kt)("p",null,"To get an overview of all the themes and components available to swizzle, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=",title:""},"docusaurus swizzle --list\n")),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"--help")," to see all available CLI options, or refer to the reference ",(0,r.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/cli#docusaurus-swizzle"},"swizzle CLI documentation"),".")),(0,r.kt)(u,{type:"note",title:"note",mdxType:"Admonition"},(0,r.kt)("p",null,"After swizzling a component, restart your dev server in order for Docusaurus to know about the new component.")),(0,r.kt)(u,{type:"note",title:"note",mdxType:"Admonition"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"docusaurus swizzle")," is only an automated way to help you swizzle the component."),(0,r.kt)("p",null,"You can also create the ",(0,r.kt)("inlineCode",{parentName:"p"},"src/theme/SomeComponent.js")," file ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," manually "),",\nand Docusaurus will ",(0,r.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/advanced/client#theme-aliases"},"resolve it"),".")),(0,r.kt)(u,{type:"danger",title:"danger",mdxType:"Admonition"},(0,r.kt)("p",null,"Be sure to understand which components are ",(0,r.kt)("a",{parentName:"p",href:"#what-is-safe-to-swizzle"},"safe to swizzle"),". Some components are internal implementation details of a theme.")),(0,r.kt)("h3",{id:"ejecting"},"Ejecting"),(0,r.kt)("p",null,"Ejecting a theme component is the process of ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," creating a copy ")," of the original theme component,\nwhich you can fully customize and override."),(0,r.kt)("p",null,"To eject a theme component, use the swizzle CLI interactively, or with the '--eject' option:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=",title:""},"docusaurus swizzle [theme name] [component name] --eject\n")),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=",title:""},"docusaurus swizzle @docusaurus/theme-classic Footer --eject\n")),(0,r.kt)("p",null,"This will copy the current ",(0,r.kt)("inlineCode",{parentName:"p"},"<Footer />")," component's implementation to your site's ",(0,r.kt)("inlineCode",{parentName:"p"},"src/theme")," directory."),(0,r.kt)("p",null,"Docusaurus will now use this ",(0,r.kt)("inlineCode",{parentName:"p"},"<Footer>")," component copy ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," instead of the original one "),"."),(0,r.kt)(m,{color:"var(--not-require-but-good-to-know-font-color)",mdxType:"Color"},(0,r.kt)("p",null,"You are now free to completely re-implement the ",(0,r.kt)("inlineCode",{parentName:"p"},"<Footer>")," component.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=src/theme/SomeComponent.js showLineNumbers",title:"src/theme/SomeComponent.js",showLineNumbers:!0},'import React from "react";\n\nexport default function Footer(props) {\n  return (\n    <footer>\n      <h1>This is my custom site footer</h1>\n      <p>And it is very different from the original</p>\n    </footer>\n  );\n}\n')),(0,r.kt)(u,{type:"caution",title:"caution",mdxType:"Admonition"},(0,r.kt)("p",null,"Ejecting an ",(0,r.kt)("a",{parentName:"p",href:"#what-is-safe-to-swizzle"},"unsafe")," component can sometimes lead to copying a large amount of internal code, which ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," you now have to maintain yourself "),"."),(0,r.kt)("p",null,"It can make Docusaurus upgrades more difficult, as you will need to migrate your customizations if the props received or internal theme APIs used have changed.")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"-re-swizzling-"},(0,r.kt)(m,{color:"var(--not-nesary-for-now-future-font-color)",mdxType:"Color"}," Re-Swizzling ")),(0,r.kt)("p",null,"To keep ejected components up-to-date after a Docusaurus upgrade, re-run the ",(0,r.kt)("inlineCode",{parentName:"p"},"eject")," command and compare the changes with ",(0,r.kt)("inlineCode",{parentName:"p"},"git diff"),"."),(0,r.kt)(u,{type:"tip",title:"tip",mdxType:"Admonition"},(0,r.kt)("p",null,"You are also recommended to write a brief comment at the top of the file explaining what changes you have made,\nso that you could more easily re-apply your changes after re-ejection.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"wrapping"},"Wrapping"),(0,r.kt)("p",null,"Wrapping a theme component is the process of ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," creating a wrapper around ")," the ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," original theme component "),",\nwhich you can ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," enhance "),"."),(0,r.kt)("p",null,"To wrap a theme component, use the swizzle CLI interactively, or with the ",(0,r.kt)("inlineCode",{parentName:"p"},"--wrap")," option:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=",title:""},"docusaurus swizzle [theme name] [component name] --wrap\n")),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=",title:""},"docusaurus swizzle @docusaurus/theme-classic Footer --wrap\n")),(0,r.kt)("p",null,"This will create a wrapper in your site's ",(0,r.kt)("inlineCode",{parentName:"p"},"src/theme")," directory."),(0,r.kt)("p",null,"Docusaurus will now use the ",(0,r.kt)("inlineCode",{parentName:"p"},"<FooterWrapper>")," component ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," instead ")," of the ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," original one "),"."),(0,r.kt)("p",null,"You can now add customizations around the original component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=src/theme/SomeComponent.js showLineNumbers",title:"src/theme/SomeComponent.js",showLineNumbers:!0},'import React from "react";\n// highlight-next-line\nimport Footer from "@theme-original/Footer";\n\nexport default function FooterWrapper(props) {\n  return (\n    <>\n      <section>\n        <h2>Extra section</h2>\n        <p>This is an extra section that appears above the original footer</p>\n      </section>\n      <Footer {...props} />\n    </>\n  );\n}\n')),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)(m,{color:"var(--not-require-but-good-to-know-font-color)",mdxType:"Color"},"What is this @theme-original thing?")),(0,r.kt)("p",null,"Docusaurus uses ",(0,r.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/advanced/client#theme-aliases"},"theme aliases")," to resolve the theme components to use."),(0,r.kt)("p",null,"The newly created wrapper ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," takes ")," the ",(0,r.kt)("inlineCode",{parentName:"p"},"@theme/SomeComponent")," ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," alias "),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@theme-original/SomeComponent")," allows to import original component that the wrapper shadows without creating an infinite import loop where the wrapper imports itself.")),(0,r.kt)(u,{type:"tip",title:"tip",mdxType:"Admonition"},(0,r.kt)("p",null,"Wrapping a theme is a great way to ",(0,r.kt)(m,{color:"var(--primary-font-color)",mdxType:"Color"}," add extra components around ")," ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," existing one ")," without ",(0,r.kt)("a",{parentName:"p",href:"#ejecting"},"ejecting")," it."),(0,r.kt)("p",null,"For example, you can easily add a custom comment system under each blog post:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=src/theme/BlogPostItem.js showLineNumbers",title:"src/theme/BlogPostItem.js",showLineNumbers:!0},'import React from "react";\nimport BlogPostItem from "@theme-original/BlogPostItem";\nimport MyCustomCommentSystem from "@site/src/MyCustomCommentSystem";\n\nexport default function BlogPostItemWrapper(props) {\n  return (\n    <>\n      <BlogPostItem {...props} />\n      <MyCustomCommentSystem />\n    </>\n  );\n}\n'))),(0,r.kt)("h2",{id:"what-is-safe-to-swizzle"},"What is safe to swizzle?"),(0,r.kt)("p",null,"Some theme components are ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," internal implementation details ")," of a theme."),(0,r.kt)("p",null,"Docusaurus allows you to swizzle them, but it might be ",(0,r.kt)(m,{color:"var(--primary-font-color)",mdxType:"Color"}," risky "),". (breaking change / backward-",(0,r.kt)(m,{color:"var(--primary-font-color)",mdxType:"Color"}," incompatibility ")," when theme authors updating their theme)."),(0,r.kt)("p",null,"For each theme component, the swizzle CLI will indicate 3 different ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," levels of safety ")," declared by theme authors:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Safe"),": this component is ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," safe to be swizzled "),", its public API is considered ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," stable "),",\nand no breaking changes should happen within a theme ",(0,r.kt)(m,{color:"var(--primary-font-color)",mdxType:"Color"}," major ")," ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," version ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Unsafe"),": this component is a theme implementation detail, ",(0,r.kt)(m,{color:"var(--primary-font-color)",mdxType:"Color"}," not safe ")," ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," to be swizzled "),",\nand ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," breaking changes ")," might happen within a theme ",(0,r.kt)(m,{color:"var(--primary-font-color)",mdxType:"Color"}," minor ")," ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," version ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Forbidden"),": the swizzle CLI will ",(0,r.kt)(m,{color:"var(--primary-font-color)",mdxType:"Color"}," prevent ")," you from swizzling this component, because it is ",(0,r.kt)(m,{color:"var(--primary-font-color)",mdxType:"Color"}," not designed to be swizzled at all "))),(0,r.kt)(u,{type:"note",title:"note",mdxType:"Admonition"},(0,r.kt)("p",null,"Some components might be safe to wrap, but not safe to eject.")),(0,r.kt)(u,{type:"info",title:"info",mdxType:"Admonition"},(0,r.kt)("p",null,"Don't be too afraid to swizzle unsafe components: just keep in mind that breaking changes might happen, and you might need to upgrade your customizations manually on minor version upgrades.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"-why-is-it-risky-"},(0,r.kt)(m,{color:"var(--not-require-but-good-to-know-font-color)",mdxType:"Color"}," Why is it risky? ")),(0,r.kt)("p",null,"Theme authors might have to update their theme over time: changing the component props, name, file system location, types..."),(0,r.kt)("p",null,"For example, consider a component that receives two props ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"age"),", but after a refactor,\nit now receives a ",(0,r.kt)("inlineCode",{parentName:"p"},"person")," prop with the above two properties.\nYour component, which still expects these two props, will render ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," instead."),(0,r.kt)("p",null,"Moreover, internal components may simply disappear.\nIf a component is called ",(0,r.kt)("inlineCode",{parentName:"p"},"Sidebar")," and it's later renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"DocSidebar"),", your swizzled component will be ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," completely ignored "),"."),(0,r.kt)("p",null,"Theme components ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," marked as unsafe ")," may change in a backward-",(0,r.kt)(m,{color:"var(--primary-font-color)",mdxType:"Color"}," incompatible ")," way between theme minor versions."),(0,r.kt)("p",null,"When upgrading a theme (or Docusaurus), your customizations might behave unexpectedly, and can even break your site."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"-which-component-should-i-swizzle-"},(0,r.kt)(m,{color:"var(--not-nesary-for-now-future-font-color)",mdxType:"Color"}," Which component should I swizzle? ")),(0,r.kt)("p",null,"It is not always clear which component you should swizzle exactly to achieve the desired result."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@docusaurus/theme-classic"),", which provides most of the theme components, has about ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/docusaurus/tree/main/packages/docusaurus-theme-classic/src/theme"},"100 components"),"!"),(0,r.kt)("p",null,"To print an overview of all the ",(0,r.kt)("inlineCode",{parentName:"p"},"@docusaurus/theme-classic")," components:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=",title:""},"docusaurus swizzle @docusaurus/theme-classic --list\n")),(0,r.kt)("p",null,"You can follow these steps to ",(0,r.kt)(m,{color:"var(--primary-font-color)",mdxType:"Color"}," locate ")," the ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," appropriate component to swizzle "),":"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Component description. Some components provide a short description, which is a good way to find the right one."),(0,r.kt)("li",{parentName:"ol"},"Component name. Official theme components are semantically named, so you should be able to infer its function from the name.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"For example, if you run yarn swizzle ",(0,r.kt)("inlineCode",{parentName:"li"},"@docusaurus/theme-classic"),", and enter ",(0,r.kt)("inlineCode",{parentName:"li"},"Doc"),", only the docs-related components will be listed.\nThe swizzle CLI allows you to enter part of a component name to narrow down the available choices."))),(0,r.kt)("li",{parentName:"ol"},"Start with a higher-level component. Components form a tree with some components importing others. Every route will be associated with one top-level component that the route will render (most of them listed in Routing in content plugins). For example, all blog post pages have @theme/BlogPostPage as the topmost component. You can start with swizzling this component, and then go down the component tree to locate the component that renders just what you are targeting. Don't forget to unswizzle the rest by deleting the files after you've found the correct one, so you don't maintain too many components."),(0,r.kt)("li",{parentName:"ol"},"Read the theme ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/facebook/docusaurus/tree/main/packages/docusaurus-theme-classic/src/theme"},"source code")," and use search wisely.")),(0,r.kt)("h2",{id:"wrapping-your-site-with-root"},"Wrapping your site with ",(0,r.kt)("inlineCode",{parentName:"h2"},"<Root>")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"<Root>")," component is ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," rendered ")," at the ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," very top of the React tree "),", above the theme ",(0,r.kt)("inlineCode",{parentName:"p"},"<Layout>"),", and ",(0,r.kt)(m,{color:"var(--primary-font-color)",mdxType:"Color"}," never unmounts "),"."),(0,r.kt)("p",null,"It is the ",(0,r.kt)(m,{color:"var(--secondary-font-color)",mdxType:"Color"}," perfect place to add stateful logic ")," that ",(0,r.kt)(m,{color:"var(--primary-font-color)",mdxType:"Color"}," should not be re-initialized ")," across navigations (user authentication status, shopping card state...)."),(0,r.kt)("p",null,"Swizzle it manually by creating a file at ",(0,r.kt)("inlineCode",{parentName:"p"},"src/theme/Root.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title=src/theme/Root.js showLineNumbers",title:"src/theme/Root.js",showLineNumbers:!0},'import React from "react";\n\n// Default implementation, that you can customize\nexport default function Root({ children }) {\n  return <>{children}</>;\n}\n')),(0,r.kt)(u,{type:"tip",title:"tip",mdxType:"Admonition"},(0,r.kt)("p",null,"Use this component to render React Context providers.")),(0,r.kt)("h1",{id:"sources"},"Sources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docusaurus.io/docs/swizzling"},"https://docusaurus.io/docs/swizzling"))))}k.isMDXComponent=!0}}]);