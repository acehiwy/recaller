"use strict";(self.webpackChunkrecaller=self.webpackChunkrecaller||[]).push([[3354],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,y=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(y,i(i({ref:t},u),{},{components:n})):r.createElement(y,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3034:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1e4,tags:["python"]},i="Dictionaries",l={unversionedId:"language/python/dictionary",id:"language/python/dictionary",title:"Dictionaries",description:"A key-value data structure",source:"@site/docs/language/python/dictionary.mdx",sourceDirName:"language/python",slug:"/language/python/dictionary",permalink:"/recaller/docs/language/python/dictionary",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/language/python/dictionary.mdx",tags:[{label:"python",permalink:"/recaller/docs/tags/python"}],version:"current",lastUpdatedAt:1756993863,formattedLastUpdatedAt:"Sep 4, 2025",sidebarPosition:1e4,frontMatter:{sidebar_position:1e4,tags:["python"]},sidebar:"default",previous:{title:"Class",permalink:"/recaller/docs/language/python/class"},next:{title:"Error and Exception",permalink:"/recaller/docs/language/python/error-and-exception"}},s={},c=[{value:"Create",id:"create",level:2},{value:"Dictionaries comprehensions",id:"dictionaries-comprehensions",level:3},{value:'Create from sequences <Color color="var(--primary-font-color)"> of key-value pairs </Color>',id:"create-from-sequences--of-key-value-pairs-",level:3},{value:'<Color color="var(--not-nesary-for-now-future-font-color)"> Create using keyword argument </Color>',id:"-create-using-keyword-argument-",level:3},{value:"Read value",id:"read-value",level:2},{value:"Write value",id:"write-value",level:2},{value:"Check for existing key",id:"check-for-existing-key",level:2},{value:"Delete key",id:"delete-key",level:2},{value:'<Color color="var(--not-nesary-for-now-future-font-color)"> Extract dictionaries&#39; key as list </Color>',id:"-extract-dictionaries-key-as-list-",level:2},{value:"Miscellaneous",id:"miscellaneous",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},p=u("Admonition"),d=u("Color"),m={toc:c};function y(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dictionaries"},"Dictionaries"),(0,o.kt)("p",null,"A key-value data structure"),(0,o.kt)("h2",{id:"create"},"Create"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},'def foo():\n  return \'foo\'\n\nmy_dict = { \n  "asdf" : 123 , \n  2222 : "sdfhs" , \n  (1,2) : "2222", \n  foo: "233"\n}\n')),(0,o.kt)(p,{type:"info",title:"info",mdxType:"Admonition"},(0,o.kt)("p",null,"Dictionaries are indexed by keys, which can be any ",(0,o.kt)(d,{color:"var(--secondary-font-color)",mdxType:"Color"}," immutable ")," type")),(0,o.kt)(p,{type:"note",title:"note",mdxType:"Admonition"},(0,o.kt)("p",null,"Tuples can be used as keys if they contain only strings, numbers, or tuples")),(0,o.kt)(p,{type:"info",title:"info",mdxType:"Admonition"},(0,o.kt)("p",null,"Dictionaries order are preserve as the insertion order")),(0,o.kt)("h3",{id:"dictionaries-comprehensions"},"Dictionaries comprehensions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"{x: x**2 for x in (2, 4, 6)}\n# {2: 4, 4: 16, 6: 36}\n")),(0,o.kt)("h3",{id:"create-from-sequences--of-key-value-pairs-"},"Create from sequences ",(0,o.kt)(d,{color:"var(--primary-font-color)",mdxType:"Color"}," of key-value pairs ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"# create from key-value list\ndict( [('sape', 4139), ('guido', 4127), ('jack', 4098)] )\n# {'sape': 4139, 'guido': 4127, 'jack': 4098}\n\n# create from key-value tuple\ndict( ((1,2), (3,4)) )\n# {1: 2, 3: 4}\n")),(0,o.kt)("h3",{id:"-create-using-keyword-argument-"},(0,o.kt)(d,{color:"var(--not-nesary-for-now-future-font-color)",mdxType:"Color"}," Create using keyword argument ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"dict(sape=4139, guido=4127, jack=4098)\n# {'sape': 4139, 'guido': 4127, 'jack': 4098}\n")),(0,o.kt)("h2",{id:"read-value"},"Read value"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},'def foo():\n  return \'foo\'\n\nmy_dict = { \n  "asdf" : 123 , \n  2222 : "sdfhs" , \n  (1,2) : "2222", \n  foo: "233"\n}\n\nsome_var = 2222\nmy_dict["asdf"]\nmy_dict[some_var]\nmy_dict[(1,2)]\nmy_dict[foo]\n')),(0,o.kt)("h2",{id:"write-value"},"Write value"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"my_dict[\"asdf\"] = 'something_else'\n")),(0,o.kt)("h2",{id:"check-for-existing-key"},"Check for existing key"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},'def foo():\n  return \'foo\'\n\nmy_dict = { \n  "asdf" : 123 , \n  2222 : "sdfhs" , \n  (1,2) : "2222", \n  foo: "233"\n}\n\nsome_var = 2222\nfoo in my_dict\n# True\n\nsome_var in my_dict\n# True\n\n(1,2) in my_dict\n# True\n\n\'else\' not in my_dict\n# False\n')),(0,o.kt)("h2",{id:"delete-key"},"Delete key"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"del foo[some_key]\n")),(0,o.kt)("h2",{id:"-extract-dictionaries-key-as-list-"},(0,o.kt)(d,{color:"var(--not-nesary-for-now-future-font-color)",mdxType:"Color"}," Extract dictionaries' key as list ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},'my_dict = list({1: "foo", "2" : "bar" , 3: "baz"})\n# [1, \'2\', 3]\n')),(0,o.kt)("h2",{id:"miscellaneous"},"Miscellaneous"),(0,o.kt)(p,{type:"info",title:"info",mdxType:"Admonition"},(0,o.kt)("p",null,"Read more on ",(0,o.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/stdtypes.html#mapping-types-dict"},"Dictionaries"))),(0,o.kt)("br",null),(0,o.kt)("hr",null),(0,o.kt)("h1",{id:"sources"},"Sources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.python.org/3/tutorial/datastructures.html#dictionaries"},"https://docs.python.org/3/tutorial/datastructures.html#dictionaries"))))}y.isMDXComponent=!0}}]);