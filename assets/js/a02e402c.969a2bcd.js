"use strict";(self.webpackChunkrecaller=self.webpackChunkrecaller||[]).push([[566],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var o=a.createContext({}),p=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=s,h=d["".concat(o,".").concat(m)]||d[m]||u[m]||i;return t?a.createElement(h,r(r({ref:n},c),{},{components:t})):a.createElement(h,r({ref:n},c))}));function m(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var i=t.length,r=new Array(i);r[0]=d;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:s,r[1]=l;for(var p=2;p<i;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1073:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=t(7462),s=(t(7294),t(3905));const i={last_update:{date:new Date("2025-10-01T13:56:30.747Z")},tags:["python"]},r="Class",l={unversionedId:"language/python/class",id:"language/python/class",title:"Class",description:"class is an object bundling state and functionality to manipulate its state.",source:"@site/docs/language/python/11_class.mdx",sourceDirName:"language/python",slug:"/language/python/class",permalink:"/recaller/docs/language/python/class",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/language/python/11_class.mdx",tags:[{label:"python",permalink:"/recaller/docs/tags/python"}],version:"current",lastUpdatedAt:1759326990.747,formattedLastUpdatedAt:"Oct 1, 2025",sidebarPosition:11,frontMatter:{last_update:{date:"2025-10-01T13:56:30.747Z"},tags:["python"]},sidebar:"default",previous:{title:"Function",permalink:"/recaller/docs/language/python/function/"},next:{title:"Scopes",permalink:"/recaller/docs/language/python/scope"}},o={},p=[{value:"Class object",id:"class-object",level:2},{value:"Instance object",id:"instance-object",level:2},{value:"Instantiate",id:"instantiate",level:3},{value:"Class variable and instance variable",id:"class-variable-and-instance-variable",level:2},{value:"Inheritance",id:"inheritance",level:2},{value:"Calling base class method while overriding",id:"calling-base-class-method-while-overriding",level:3},{value:"<code>isinstance</code> function",id:"isinstance-function",level:3},{value:"<code>issubclass</code> function",id:"issubclass-function",level:3},{value:"Multiple inheritance",id:"multiple-inheritance",level:3},{value:"Private variable",id:"private-variable",level:2},{value:"Name mangling",id:"name-mangling",level:3},{value:'<Color color="var(--not-require-but-good-to-know-font-color)">Attribute references</Color>',id:"attribute-references",level:2}],c=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",n)},u=c("Color"),d=c("Admonition"),m={toc:p};function h(e){let{components:n,...t}=e;return(0,s.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"class"},"Class"),(0,s.kt)("p",null,"class is an object bundling state and functionality to manipulate its state."),(0,s.kt)("p",null,"\u200b",(0,s.kt)(u,{color:"var(--not-require-but-good-to-know-font-color)",mdxType:"Color"},"Code below is used as reference on futher section on this page")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},'class MyClass:\n    """A simple example class"""\n    i = 12345\n\n    def __init__(self, arg1):\n      self.arg1 = arg1\n\n    def f(self, bar):\n        return bar + self.arg1\n')),(0,s.kt)("h2",{id:"class-object"},"Class object"),(0,s.kt)("p",null,"is static class. eg ",(0,s.kt)("inlineCode",{parentName:"p"},"MyClass")),(0,s.kt)("h2",{id:"instance-object"},"Instance object"),(0,s.kt)("p",null,"is a class instance"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"__init__")," method is a constructor method"),(0,s.kt)("p",null,"first argument, ",(0,s.kt)("inlineCode",{parentName:"p"},"self"),", refer to instance of a class itself"),(0,s.kt)("h3",{id:"instantiate"},"Instantiate"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"instance = MyClass('foo')\n")),(0,s.kt)("p",null,"When method is called, ",(0,s.kt)(u,{color:"var(--secondary-font-color)",mdxType:"Color"},"an instance is passed as the first argument")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"instance.f()\n\n# equivalent to\nMyClass.f(instance)\n")),(0,s.kt)(d,{type:"note",title:"note",mdxType:"Admonition"},(0,s.kt)("p",null,"Word ",(0,s.kt)("inlineCode",{parentName:"p"},"self")," has no special meaning in python"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"self")," is just convention. It can be any name")),(0,s.kt)(d,{type:"note",title:"note",mdxType:"Admonition"},(0,s.kt)("p",null,"An instance is still attached to the method even if the method is called sometime later"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"ins = MyClass('foo')\ntemp_f = ins.f\n\n# highlight-start\n# no need to provide `self`\nprint(temp_f('bar'))\n# highlight-end\n# barfoo\n"))),(0,s.kt)("h2",{id:"class-variable-and-instance-variable"},"Class variable and instance variable"),(0,s.kt)("p",null,"A class variable is attributes that shared across all instances (static attribute / properties)"),(0,s.kt)("p",null,"A instance variable is attributes that unique to each instance"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"class Dog:\n    # class variable shared by all instances\n    kind = 'canine'  \n\n    def __init__(self, name):\n        # instance variable unique to each instance\n        self.name = name \n")),(0,s.kt)(d,{type:"caution",title:"caution",mdxType:"Admonition"},(0,s.kt)("p",null,"After class definition or instantiation"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"a class attribute can be reassigned"),(0,s.kt)("li",{parentName:"ul"},"a new attribute can be set / added")),(0,s.kt)("details",null,(0,s.kt)("summary",null," Example "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"class MyClass:\n    \"\"\"A simple example class\"\"\"\n    i = 12345\n\n    def f(self):\n        return 'hello world'\n\nMyClass.i = 999\nprint(MyClass.i)\n# 999\n\nMyClass.new_attr = 'new attr'\n\nins = MyClass()\nprint(ins.i , ins.new_attr)\n# 999 , new attr\nins.i = 'ins value'\nprint(ins.i)\n# ins value\n")))),(0,s.kt)("h2",{id:"inheritance"},"Inheritance"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"class DerivedClassName(BaseClassName):\n    pass\n")),(0,s.kt)("h3",{id:"calling-base-class-method-while-overriding"},"Calling base class method while overriding"),(0,s.kt)("p",null,"use ",(0,s.kt)("inlineCode",{parentName:"p"},"<BaseClass>.<method>(<instance> , ...arguments)")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"class BaseClass:\n  def foo(self, arg1):\n    return 'foo' + arg1\n  \n\nclass Derived(BaseClass):\n  # highlight-start\n  def foo(self):\n    return BaseClass.foo(self, 'bar') + 'overrided'\n  # highlight-end\n\nins = Derived()\nprint(ins.foo())\n# foobaroverrided\n")),(0,s.kt)("h3",{id:"isinstance-function"},(0,s.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/functions.html#isinstance"},(0,s.kt)("inlineCode",{parentName:"a"},"isinstance"))," function"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"isinstance(obj, int)\n")),(0,s.kt)("p",null,"Check whether ",(0,s.kt)("inlineCode",{parentName:"p"},"obj")," is an instance or a derived instance of ",(0,s.kt)("inlineCode",{parentName:"p"},"int")),(0,s.kt)("h3",{id:"issubclass-function"},(0,s.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/functions.html#issubclass"},(0,s.kt)("inlineCode",{parentName:"a"},"issubclass"))," function"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"issubclass(Derived, BaseClass)\n")),(0,s.kt)("p",null,"Check whether class object, ",(0,s.kt)("inlineCode",{parentName:"p"},"Derived"),", is derived from another class object, ",(0,s.kt)("inlineCode",{parentName:"p"},"BaseClass")),(0,s.kt)("h3",{id:"multiple-inheritance"},"Multiple inheritance"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"class DerivedClassName(Base1, Base2, Base3):\n    pass\n")),(0,s.kt)("p",null,"This means ",(0,s.kt)("inlineCode",{parentName:"p"},"DerivedClassName")," class has all attribute of ",(0,s.kt)("inlineCode",{parentName:"p"},"Base1"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"Base2")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"Base3")," combined"),(0,s.kt)("p",null,"When attribute is referenced, Python does depth-first / left-to-right search and ",(0,s.kt)(u,{color:"var(--secondary-font-color)",mdxType:"Color"},"not searching for same class twice")),(0,s.kt)("p",null,"Eg. if attribute ",(0,s.kt)("inlineCode",{parentName:"p"},"foo")," is called, python will search from"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("inlineCode",{parentName:"li"},"DerivedClassName")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("inlineCode",{parentName:"li"},"Base1")," class",(0,s.kt)("ol",{parentName:"li"},(0,s.kt)("li",{parentName:"ol"},"Parent class of ",(0,s.kt)("inlineCode",{parentName:"li"},"Base1")," and continue ",(0,s.kt)(u,{color:"var(--secondary-font-color)",mdxType:"Color"},"recursivly")," through its grandparent class using same left-to-right searching"))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("inlineCode",{parentName:"li"},"Base2")," class"),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("inlineCode",{parentName:"li"},"Base3")," class")),(0,s.kt)("details",null,(0,s.kt)("summary",null,' "not searching for same class twice" example '),(0,s.kt)("p",null,"Assuming ",(0,s.kt)("inlineCode",{parentName:"p"},"Base1"),"'s parent class is ",(0,s.kt)("inlineCode",{parentName:"p"},"Bar")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"Base2")," also has same parent class ",(0,s.kt)("inlineCode",{parentName:"p"},"Bar")),(0,s.kt)("p",null,"Search path would be ",(0,s.kt)("inlineCode",{parentName:"p"},"DerivedClassName")," -> ",(0,s.kt)("inlineCode",{parentName:"p"},"Base1")," -> ",(0,s.kt)("inlineCode",{parentName:"p"},"Bar")," -> ",(0,s.kt)("inlineCode",{parentName:"p"},"Base2")," -> ",(0,s.kt)("del",{parentName:"p"},(0,s.kt)("inlineCode",{parentName:"del"},"Bar"))," -> ",(0,s.kt)("inlineCode",{parentName:"p"},"Base3")),(0,s.kt)("p",null,"Notice that ",(0,s.kt)("inlineCode",{parentName:"p"},"Base2")," inherit ",(0,s.kt)("inlineCode",{parentName:"p"},"Bar")," but ",(0,s.kt)("inlineCode",{parentName:"p"},"Bar")," has already been searched in ",(0,s.kt)("inlineCode",{parentName:"p"},"Base1")," path so it is skipped ")),(0,s.kt)(d,{type:"info",title:"info",mdxType:"Admonition"},(0,s.kt)("p",null,"More info on ",(0,s.kt)("a",{parentName:"p",href:"https://docs.python.org/3/howto/mro.html#python-2-3-mro"},"Method Resolution Order"))),(0,s.kt)("h2",{id:"private-variable"},"Private variable"),(0,s.kt)("p",null,"private instance variable does not exist in Python"),(0,s.kt)("p",null,"People conventionally prepend variable name with single underscore ",(0,s.kt)("inlineCode",{parentName:"p"},"_")," to indicate that it is for internal usage. eg ",(0,s.kt)("inlineCode",{parentName:"p"},"_foo")),(0,s.kt)("h3",{id:"name-mangling"},"Name mangling"),(0,s.kt)("p",null,"Class attributes that begin with >= 2 underscore and does not end with >= 2 underscore are not acceesible outside class definition"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"class Foo:\n  _1under = 10\n  __2under = 20\n  __2under1_ = 21\n  ___3under2__ = 32\n\nins = Foo()\n\nFoo._1under # no runtime error\nins._1under # no runtime error\nins.___3under2__ # no runtime error\n\n\n# highlight-error-start\nFoo.__2under\nins.__2under\nFoo.__2under1_\n# AttributeError: type object 'Foo' has no attribute '__2under'\n# highlight-error-end\n")),(0,s.kt)("p",null,"This effect is ",(0,s.kt)("a",{parentName:"p",href:"https://docs.python.org/3/reference/expressions.html#index-5"},"Name Mangling")),(0,s.kt)("p",null,"Python change attribute name from ",(0,s.kt)("inlineCode",{parentName:"p"},"__<attr name>")," to ",(0,s.kt)("inlineCode",{parentName:"p"},"_<its class name>__<attr name>")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"ins = Foo()\n\n# no error\nFoo._Foo__2under\nins._Foo__2under\nFoo._Foo__2under1_\n")),(0,s.kt)("h2",{id:"attribute-references"},(0,s.kt)(u,{color:"var(--not-require-but-good-to-know-font-color)",mdxType:"Color"},"Attribute references")),(0,s.kt)("p",null,"is accessing class's attribute or class's method (apply for both a static class and class instance)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"instance = MyClass()\n\n# attr reference\nMyClass.i\nMyClass.f\ninstance.i\ninstance.f\n")),(0,s.kt)("br",null),(0,s.kt)("hr",null),(0,s.kt)("h1",{id:"sources"},"Sources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://docs.python.org/3/tutorial/classes.html"},"https://docs.python.org/3/tutorial/classes.html")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://docs.python.org/3/reference/expressions.html#private-name-mangling"},"https://docs.python.org/3/reference/expressions.html#private-name-mangling"))))}h.isMDXComponent=!0}}]);