"use strict";(self.webpackChunkrecaller=self.webpackChunkrecaller||[]).push([[2370],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),c=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),m=n,b=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return r?o.createElement(b,i(i({ref:t},u),{},{components:r})):o.createElement(b,i({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1782:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=r(7462),n=(r(7294),r(3905));const a={tags:["rabbitmq","tool"]},i="Rabbitmq",l={unversionedId:"tool/rabbitmq/index",id:"tool/rabbitmq/index",title:"Rabbitmq",description:"Introduction",source:"@site/docs/tool/rabbitmq/index.mdx",sourceDirName:"tool/rabbitmq",slug:"/tool/rabbitmq/",permalink:"/recaller/docs/tool/rabbitmq/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tool/rabbitmq/index.mdx",tags:[{label:"rabbitmq",permalink:"/recaller/docs/tags/rabbitmq"},{label:"tool",permalink:"/recaller/docs/tags/tool"}],version:"current",lastUpdatedAt:1759076095,formattedLastUpdatedAt:"Sep 28, 2025",frontMatter:{tags:["rabbitmq","tool"]},sidebar:"default",previous:{title:"Rebase",permalink:"/recaller/docs/tool/git/rebase"},next:{title:"Message Acknowledgment",permalink:"/recaller/docs/tool/rabbitmq/message-acknowledgment"}},s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Producer",id:"producer",level:2},{value:"Queue",id:"queue",level:2},{value:"Consumer",id:"consumer",level:2}],u=(p="Color",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)});var p;const d={toc:c};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"rabbitmq"},"Rabbitmq"),(0,n.kt)("h2",{id:"introduction"},"Introduction"),(0,n.kt)("p",null,"RabbitMQ is a message broker: it ",(0,n.kt)(u,{color:"var(--secondary-font-color)",mdxType:"Color"}," accepts and forwards ")," messages."),(0,n.kt)(u,{color:"var(--not-require-but-good-to-know-font-color)",mdxType:"Color"},(0,n.kt)("p",null,"You can think about it as a post office: when you put the mail that you want posting\nin a post box, you can be sure that the letter carrier will eventually deliver\nthe mail to your recipient. In this analogy, RabbitMQ is a post box, a post office,\nand a letter carrier.")),(0,n.kt)("p",null,"RabbitMQ accepts, stores, and forwards binary blobs of data - messages."),(0,n.kt)("h2",{id:"producer"},"Producer"),(0,n.kt)("p",null,"Producing means nothing more than sending. A program that sends messages is a ",(0,n.kt)(u,{color:"var(--secondary-font-color)",mdxType:"Color"}," producer "),"."),(0,n.kt)("h2",{id:"queue"},"Queue"),(0,n.kt)("p",null,"A queue is the name for a post box which lives inside RabbitMQ."),(0,n.kt)("p",null,"Although messages flow through RabbitMQ and your applications,they can only be stored inside a queue."),(0,n.kt)("p",null,"A queue is only bound by the host's memory & disk limits, it's essentially a large message buffer."),(0,n.kt)("p",null,"Many producers can send messages that go to one queue, and many consumers can try to receive data from one queue. This is how we represent a queue"),(0,n.kt)("h2",{id:"consumer"},"Consumer"),(0,n.kt)("p",null,"Consuming has a similar meaning to receiving. A consumer is a program that mostly waits to receive messages."))}m.isMDXComponent=!0}}]);