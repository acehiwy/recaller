"use strict";(self.webpackChunkrecaller=self.webpackChunkrecaller||[]).push([[3592],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5200:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1e4,tags:["python"]},i="String",l={unversionedId:"language/python/string",id:"language/python/string",title:"String",description:"double quote and single quote are equivalent",source:"@site/docs/language/python/string.mdx",sourceDirName:"language/python",slug:"/language/python/string",permalink:"/recaller/docs/language/python/string",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/language/python/string.mdx",tags:[{label:"python",permalink:"/recaller/docs/tags/python"}],version:"current",lastUpdatedAt:1756722818,formattedLastUpdatedAt:"Sep 1, 2025",sidebarPosition:1e4,frontMatter:{sidebar_position:1e4,tags:["python"]},sidebar:"default",previous:{title:"Queue",permalink:"/recaller/docs/language/python/queue"},next:{title:"Type hint",permalink:"/recaller/docs/language/python/type-hint/"}},s={},p=[{value:"Concat string",id:"concat-string",level:3},{value:"string indexing",id:"string-indexing",level:3},{value:"Slice (substring)",id:"slice-substring",level:3},{value:"string length",id:"string-length",level:3},{value:"String interpolation",id:"string-interpolation",level:3},{value:"Miscellaneous",id:"miscellaneous",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},c=u("Admonition"),d=u("Color"),m={toc:p};function g(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"string"},"String"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},'some_string = "string value"\n')),(0,a.kt)("p",null,"double quote and single quote are equivalent"),(0,a.kt)("p",null,"escape character is ",(0,a.kt)("inlineCode",{parentName:"p"},"\\")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},">>> 'doesn\\'t'  # use \\' to escape the single quote...\n\"doesn't\"\n")),(0,a.kt)("p",null,"with ",(0,a.kt)("inlineCode",{parentName:"p"},"print()"),", special characters are interpreted"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"s = 'First line.\\n Second line.' \ns  # without print(), special characters are included in the string\n# 'First line.\\n Second line.'\n\nprint(s)  \n# First line.\n# Second line.\n")),(0,a.kt)(c,{type:"info",title:"info",mdxType:"Admonition"},(0,a.kt)("p",null,"use raw string if you don't want characters prefaced by \\ to be interpreted as special characters"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"print(r'C:\\some\\name')  # note the r before the quote\n# C:\\some\\name\n"))),(0,a.kt)("p",null,"Multiple line string use triple quote:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},'print("""\\\nUsage: thingy [OPTIONS]\n     -h                        Display this usage message\n     -H hostname               Hostname to connect to\n""")\n')),(0,a.kt)(c,{type:"note",title:"note",mdxType:"Admonition"},(0,a.kt)("p",null,"End of line character are automatically ",(0,a.kt)(d,{color:"var(--secondary-font-color)",mdxType:"Color"}," included on each line ")," but u can prevent by adding ",(0,a.kt)("inlineCode",{parentName:"p"},"\\")," at the end of the line")),(0,a.kt)("h3",{id:"concat-string"},"Concat string"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"3 * 'un' + 'ium'\n# 'unununium'\n")),(0,a.kt)("p",null,"Two or more ",(0,a.kt)(d,{color:"var(--primary-font-color)",mdxType:"Color"}," string literals ")," next to each other are automatically concatenated."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"'foo' 'bar'  'baz'\n# 'foobarbaz'\n")),(0,a.kt)("h3",{id:"string-indexing"},"string indexing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"word = 'Python'\nword[0]  # character in position 0\n# 'P'\nword[5]  # character in position 5\n# 'n'\n\nword[-2]  # second-last character\n# 'o'\nword[-6]\n# 'P'\n")),(0,a.kt)("h3",{id:"slice-substring"},"Slice (substring)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"word = 'Python'\nword[0:2]  # characters from position 0 (included) to 2 (excluded)\n# 'Py'\n\nword[:2]   # character from the beginning to position 2 (excluded)\n# 'Py'\nword[4:]   # characters from position 4 (included) to the end\n# 'on'\nword[-2:]  # characters from the second-last (included) to the end\n# 'on'\n")),(0,a.kt)(c,{type:"note",title:"note",mdxType:"Admonition"},(0,a.kt)("p",null,"Index substitution, the start is always included, and the end always excluded")),(0,a.kt)(c,{type:"note",title:"note",mdxType:"Admonition"},(0,a.kt)("p",null,"out of range slice indexes are handled gracefully:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"word = \"python\"\nword[4:42]\n# 'on'\nword[42:]\n# ''\n"))),(0,a.kt)("h3",{id:"string-length"},"string length"),(0,a.kt)("p",null,"use ",(0,a.kt)("inlineCode",{parentName:"p"},"len()")),(0,a.kt)("h3",{id:"string-interpolation"},"String interpolation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"result = f'{var_1} is not the same as {var_2}'\n")),(0,a.kt)(c,{type:"tip",title:"later",mdxType:"Admonition"},(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"str.format()")," can be used alternatively. See more info ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/stdtypes.html#str.format"},"here"))),(0,a.kt)(c,{type:"tip",title:"later",mdxType:"Admonition"},(0,a.kt)("p",null,"the ",(0,a.kt)("inlineCode",{parentName:"p"},"{}")," syntax can do much more than substitute a string. It can format a string to be any form u like."),(0,a.kt)("p",null,"see more info ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/reference/lexical_analysis.html#f-strings"},"here"))),(0,a.kt)("h2",{id:"miscellaneous"},"Miscellaneous"),(0,a.kt)("p",null,"Use ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/stdtypes.html#str"},(0,a.kt)("inlineCode",{parentName:"a"},"str()"))," or ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/functions.html#repr"},(0,a.kt)("inlineCode",{parentName:"a"},"repr()"))," function to view a string representation of an object."),(0,a.kt)("p",null,"Convert string to byte, ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/stdtypes.html#str.encode"},(0,a.kt)("inlineCode",{parentName:"a"},"str.encode()"))),(0,a.kt)("p",null,"JSON serializing and deserializing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"import json\nx = [1, 'simple', 'list']\n\n# serializing\njson.dumps(x)\n\n\n# deserializing\njson_string = '...'\njson.loads(json_string)\n")),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h1",{id:"sources"},"Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/tutorial/introduction.html#text"},"https://docs.python.org/3/tutorial/introduction.html#text")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/tutorial/inputoutput.html#fancier-output-formatting"},"https://docs.python.org/3/tutorial/inputoutput.html#fancier-output-formatting"))))}g.isMDXComponent=!0}}]);