"use strict";(self.webpackChunkrecaller=self.webpackChunkrecaller||[]).push([[4454],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(h,l(l({ref:t},u),{},{components:n})):r.createElement(h,l({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2793:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={},l="List",i={unversionedId:"language/python/list",id:"language/python/list",title:"List",description:"List can also be indexed and sliced",source:"@site/docs/language/python/list.mdx",sourceDirName:"language/python",slug:"/language/python/list",permalink:"/recaller/docs/language/python/list",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/language/python/list.mdx",tags:[],version:"current",lastUpdatedAt:1759076095,formattedLastUpdatedAt:"Sep 28, 2025",frontMatter:{},sidebar:"default",previous:{title:"Function",permalink:"/recaller/docs/language/python/function/"},next:{title:"Set",permalink:"/recaller/docs/language/python/set"}},s={},p=[{value:'Add <Color color="var(--primary-font-color)"> a single </Color> item to the list',id:"add--a-single--item-to-the-list",level:2},{value:"Concat List",id:"concat-list",level:2},{value:"Write value to a list / slice",id:"write-value-to-a-list--slice",level:2},{value:"Sort list",id:"sort-list",level:2},{value:"List comprehensions (sugar syntax to craete list)",id:"list-comprehensions-sugar-syntax-to-craete-list",level:2},{value:'<Color color="var(--not-require-but-good-to-know-font-color)"> multiple loop </Color>',id:"-multiple-loop-",level:3},{value:"nested list comprehensions",id:"nested-list-comprehensions",level:3}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},c=u("Color"),m=u("Admonition"),d={toc:p};function h(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"list"},"List"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},'squares = [1, 4, 9, 16, 25, "foo"]\n')),(0,o.kt)("p",null,"List can also be indexed and sliced"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"squares[0]  # indexing returns the item\nsquares[-1]\nsquares[-3:]  # slicing returns a new list\n")),(0,o.kt)("h2",{id:"add--a-single--item-to-the-list"},"Add ",(0,o.kt)(c,{color:"var(--primary-font-color)",mdxType:"Color"}," a single ")," item to the list"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"foo = [1,2,3]\n\nfoo.append(4)\nfoo.append([\"a\", \"b\"])\n# [1, 2, 3, 4, ['a', 'b']]\n")),(0,o.kt)("h2",{id:"concat-list"},"Concat List"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"some_list + [36, 49, 64, 81, 100]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"list.extend(<iterable>) # mutate object , return None\n\n[1,2,3].extend([4,5,6])\n")),(0,o.kt)("h2",{id:"write-value-to-a-list--slice"},"Write value to a list / slice"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g']\n\n# replace some values\nletters[2:5] = ['C', 'D', 'E']\n# ['a', 'b', 'C', 'D', 'E', 'f', 'g']\n\n# remove some values\nletters[2:5] = []\n# ['a', 'b', 'f', 'g']\n")),(0,o.kt)("h2",{id:"sort-list"},"Sort list"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"my_list.sort() # mutate object , return None\n")),(0,o.kt)(m,{type:"caution",title:"caution",mdxType:"Admonition"},(0,o.kt)("p",null,"If item in a list can not be compared to each other (",(0,o.kt)("inlineCode",{parentName:"p"},"None")," with ",(0,o.kt)("inlineCode",{parentName:"p"},"string")," , ",(0,o.kt)("inlineCode",{parentName:"p"},"string")," with ",(0,o.kt)("inlineCode",{parentName:"p"},"int"),"), then the list can not be sorted"),(0,o.kt)("p",null,"eg. ",(0,o.kt)("inlineCode",{parentName:"p"},"[None, 'hello', 10]"))),(0,o.kt)("h2",{id:"list-comprehensions-sugar-syntax-to-craete-list"},"List comprehensions (sugar syntax to craete list)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"squares = [x**2 for x in range(10) if x > 2]\n")),(0,o.kt)("p",null,"Equivalent to"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"squares = []\nfor x in range(10):\n    if x > 2:\n      squares.append(x**2)\n")),(0,o.kt)("h3",{id:"-multiple-loop-"},(0,o.kt)(c,{color:"var(--not-require-but-good-to-know-font-color)",mdxType:"Color"}," multiple loop ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"squares = [(x, y) for x in [1,2,3] if x != 1 for y in [3,1,4] if x != y]\n")),(0,o.kt)("p",null,"Equivalent to"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"squares = []\nfor x in [1,2,3]:\n    if x != 1:\n      for y in [3,1,4]:\n        if x != y:\n          squares.append((x,y))\n")),(0,o.kt)("h3",{id:"nested-list-comprehensions"},"nested list comprehensions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"matrix = [\n    [1, 2, 3, 4],\n    [5, 6, 7, 8],\n    [9, 10, 11, 12],\n]\n\n[[row[i] for row in matrix] for i in range(4)]\n")),(0,o.kt)("p",null,"equivalent to"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"\ntransposed = []\nfor i in range(4):\n    # the following 3 lines implement the nested listcomp\n    transposed_row = []\n    for row in matrix:\n        transposed_row.append(row[i])\n    transposed.append(transposed_row)\n")),(0,o.kt)("br",null),(0,o.kt)("hr",null),(0,o.kt)("h1",{id:"sources"},"Sources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.python.org/3/tutorial/introduction.html#lists"},"https://docs.python.org/3/tutorial/introduction.html#lists")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.python.org/3/tutorial/datastructures.html"},"https://docs.python.org/3/tutorial/datastructures.html"))))}h.isMDXComponent=!0}}]);