"use strict";(self.webpackChunkrecaller=self.webpackChunkrecaller||[]).push([[9054],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),p=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,h=d["".concat(i,".").concat(m)]||d[m]||c[m]||a;return n?o.createElement(h,l(l({ref:t},u),{},{components:n})):o.createElement(h,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var p=2;p<a;p++)l[p]=n[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6723:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const a={tags:["python"],last_update:{date:new Date("2025-10-01T13:56:30.747Z")}},l=void 0,s={unversionedId:"language/python/note",id:"language/python/note",title:"note",description:"Some Python modules are also useful as scripts. These can be invoked using python -m module [arg] ..., which executes the source file for module as if you had spelled out its full name on the command line.",source:"@site/docs/language/python/note.mdx",sourceDirName:"language/python",slug:"/language/python/note",permalink:"/recaller/docs/language/python/note",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/language/python/note.mdx",tags:[{label:"python",permalink:"/recaller/docs/tags/python"}],version:"current",lastUpdatedAt:1759326990.747,formattedLastUpdatedAt:"Oct 1, 2025",frontMatter:{tags:["python"],last_update:{date:"2025-10-01T13:56:30.747Z"}},sidebar:"default",previous:{title:"Assignment Expression",permalink:"/recaller/docs/language/python/assignment-expression"},next:{title:"Anki",permalink:"/recaller/docs/tool/anki/"}},i={},p=[{value:"Passing argument to the script",id:"passing-argument-to-the-script",level:2},{value:'<Color color="var(--not-require-but-good-to-know-font-color)"> Source Code Encoding </Color>',id:"-source-code-encoding-",level:2},{value:"Miscellaneous",id:"miscellaneous",level:2}],u=(c="Color",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var c;const d={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(u,{color:"var(--can-not-understand-font-color)",mdxType:"Color"}," Some Python modules are also useful as scripts. These can be invoked using python -m module [arg] ..., which executes the source file for module as if you had spelled out its full name on the command line. "),(0,r.kt)("h2",{id:"passing-argument-to-the-script"},"Passing argument to the script"),(0,r.kt)("p",null,"script argument can be accessed by "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"import sys\n\nsys.argv # list of string\n")),(0,r.kt)("p",null,"The length of the list is at least oneee"),(0,r.kt)("p",null,"when no script and no arguments are given, ",(0,r.kt)("inlineCode",{parentName:"p"},"sys.argv[0]")," is an empty string"),(0,r.kt)("p",null,"When the script name is given as ",(0,r.kt)("inlineCode",{parentName:"p"},"-")," (meaning standard input), ",(0,r.kt)("inlineCode",{parentName:"p"},"sys.argv[0]")," is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"-")),(0,r.kt)("p",null,"In interactive mode, the last printed expression is assigned to the variable ",(0,r.kt)("inlineCode",{parentName:"p"},"_")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=",title:""},"2+3\n# 5\n_ * 2\n# 10\n_ + 1\n# 11\n")),(0,r.kt)(u,{color:"var(--can-not-understand-font-color)",mdxType:"Color"}," When -m module is used, sys.argv[0] is set to the full name of the located module. Options found after -c command or -m module are not consumed by the Python interpreter\u2019s option processing but left in sys.argv for the command or module to handle. "),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"-source-code-encoding-"},(0,r.kt)(u,{color:"var(--not-require-but-good-to-know-font-color)",mdxType:"Color"}," Source Code Encoding ")),(0,r.kt)("p",null,"By default, Python source files are treated as encoded in UTF-8."),(0,r.kt)("p",null,"declaring other encoding other than default one use special comment should be added as the first line of the file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=foo.py showLineNumbers",title:"foo.py",showLineNumbers:!0},"# -*- coding: <encoding> -*-\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=foo.py showLineNumbers",title:"foo.py",showLineNumbers:!0},"# -*- coding: cp1252 -*-\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=foo.sh showLineNumbers",title:"foo.sh",showLineNumbers:!0},"#!/usr/bin/env python3\n# -*- coding: cp1252 -*-\n")),(0,r.kt)("p",null,"where ",(0,r.kt)("inlineCode",{parentName:"p"},"<encoding>")," is one of ",(0,r.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/codecs.html#module-codecs"},"codecs")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"miscellaneous"},"Miscellaneous"),(0,r.kt)("p",null,"Division ",(0,r.kt)("inlineCode",{parentName:"p"},"/")," always returns a float. To do floor division and get an integer result you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"//")," operator;"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=",title:""},"1273/3\n# 424.3333333333333\n1273//3\n# 424\n")),(0,r.kt)("p",null,"Simple assignment in Python never copies data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},'var1 = "foo"\nvar2 = "foo"\nvar1 == var2\n# True\nid(var1) == id(var2)\n# True\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"print()")," accept ",(0,r.kt)("inlineCode",{parentName:"p"},"end=")," argument for specifying end of the line characters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},'print("foo", end="something not new line")\n')),(0,r.kt)("br",null),(0,r.kt)("hr",null),(0,r.kt)("h1",{id:"sources"},"Sources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.python.org/3/tutorial/interpreter.html"},"https://docs.python.org/3/tutorial/interpreter.html")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.python.org/3/tutorial/introduction.html"},"https://docs.python.org/3/tutorial/introduction.html"))))}m.isMDXComponent=!0}}]);