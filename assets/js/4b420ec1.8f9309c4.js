"use strict";(self.webpackChunkrecaller=self.webpackChunkrecaller||[]).push([[9688],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(t),d=o,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return t?r.createElement(g,l(l({ref:n},c),{},{components:t})):r.createElement(g,l({ref:n},c))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4166:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const a={last_update:{date:new Date("2025-09-14T15:29:00.000Z")},tags:["python"]},l="Scopes",i={unversionedId:"language/python/scope",id:"language/python/scope",title:"Scopes",description:"When u references a variable, Python would look for it start from:",source:"@site/docs/language/python/12_scope.mdx",sourceDirName:"language/python",slug:"/language/python/scope",permalink:"/recaller/docs/language/python/scope",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/language/python/12_scope.mdx",tags:[{label:"python",permalink:"/recaller/docs/tags/python"}],version:"current",lastUpdatedAt:1757863740,formattedLastUpdatedAt:"Sep 14, 2025",sidebarPosition:12,frontMatter:{last_update:{date:"2025-09-14T15:29:00.000Z"},tags:["python"]},sidebar:"default",previous:{title:"Class",permalink:"/recaller/docs/language/python/class"},next:{title:"Error and Exception",permalink:"/recaller/docs/language/python/error-and-exception"}},s={},p=[{value:"Rewrite outer enclosing variable",id:"rewrite-outer-enclosing-variable",level:2},{value:"<code>nonlocal</code> keyword",id:"nonlocal-keyword",level:3},{value:"<code>global</code> keyword",id:"global-keyword",level:3}],c=(u="Admonition",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var u;const m={toc:p};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"scopes"},"Scopes"),(0,o.kt)("p",null,"When u references a variable, Python would look for it start from:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"current enclosing (function , class)"),(0,o.kt)("li",{parentName:"ol"},"next outer enclosing until global enclosing including imported module "),(0,o.kt)("li",{parentName:"ol"},"built-in module names")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py showLineNumbers",title:"main.py",showLineNumbers:!0},"import sys # built-in module name\n\nfrom current_module import baz\n# global_scope\n\ndef foo():\n    # bar_outer_enclosing\n\n    def bar():\n        # current_enclosing        \n        baz()\n")),(0,o.kt)("h2",{id:"rewrite-outer-enclosing-variable"},"Rewrite outer enclosing variable"),(0,o.kt)("p",null,"You can not rewrite outer enclosing variable without special keyword, ",(0,o.kt)("inlineCode",{parentName:"p"},"nonlocal")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"global")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py showLineNumbers",title:"main.py",showLineNumbers:!0},"def foo():\n  x = 1\n\n  def bar():\n    # highlight-next-line\n    x = 2\n    print('bar:' ,x)\n  \n  bar()\n  print('foo:', x)\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null," output "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"bar: 2\nfoo: 1\n"))),(0,o.kt)("p",null,"The statement ",(0,o.kt)("inlineCode",{parentName:"p"},"x = 2")," at line 5 would not change the value of ",(0,o.kt)("inlineCode",{parentName:"p"},"x")," at line 2 "),(0,o.kt)("p",null,"Python interpret ",(0,o.kt)("inlineCode",{parentName:"p"},"x = 2")," as defining ",(0,o.kt)("inlineCode",{parentName:"p"},"x")," to current enclosing, so it has no effect for outer"),(0,o.kt)("h3",{id:"nonlocal-keyword"},(0,o.kt)("inlineCode",{parentName:"h3"},"nonlocal")," keyword"),(0,o.kt)("p",null,"To rewrite outer enclosing variable use keyword ",(0,o.kt)("inlineCode",{parentName:"p"},"nonlocal")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py showLineNumbers",title:"main.py",showLineNumbers:!0},"def foo():\n  x = 1\n\n  def bar():\n    # highlight-start\n    nonlocal x \n    x = 2\n    # highlight-end\n    print('bar:' ,x)\n  \n  bar()\n  print('foo:', x)\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null," output "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"bar: 2\nfoo: 2\n"))),(0,o.kt)("h3",{id:"global-keyword"},(0,o.kt)("inlineCode",{parentName:"h3"},"global")," keyword"),(0,o.kt)("p",null,"To rewrite global variable use keyword ",(0,o.kt)("inlineCode",{parentName:"p"},"global")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py showLineNumbers",title:"main.py",showLineNumbers:!0},"x = 0\ndef foo():\n  x = 1\n  def bar():\n    global x \n    x = 2\n    print('bar:' ,x)\n  \n  bar()\n  print('foo:', x)\n\nprint('at global scope' , x)\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null," output "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"bar: 2\nfoo: 1\nat global scope 2\n"))),(0,o.kt)(c,{type:"note",title:"note",mdxType:"Admonition"},(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"nonlocal")," can not be used to rewrite global scope variable"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py showLineNumbers",title:"main.py",showLineNumbers:!0},"x = 0\ndef foo():\n  # highlight-error-next-line\n  nonlocal x\n  x = 1\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"File \"/usr/src/app/class.py\", line 3\n    nonlocal x\n    ^^^^^^^^^^\nSyntaxError: no binding for nonlocal 'x' found\n"))),(0,o.kt)("br",null),(0,o.kt)("hr",null),(0,o.kt)("h1",{id:"sources"},"Sources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.python.org/3/tutorial/classes.html#python-scopes-and-namespaces"},"https://docs.python.org/3/tutorial/classes.html#python-scopes-and-namespaces")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/1261875/what-does-nonlocal-do-in-python-3"},"https://stackoverflow.com/questions/1261875/what-does-nonlocal-do-in-python-3"))))}d.isMDXComponent=!0}}]);