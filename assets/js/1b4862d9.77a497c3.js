"use strict";(self.webpackChunkrecaller=self.webpackChunkrecaller||[]).push([[3620],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=l.createContext({}),u=function(e){var t=l.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return l.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,y=m["".concat(p,".").concat(d)]||m[d]||c[d]||r;return n?l.createElement(y,o(o({ref:t},s),{},{components:n})):l.createElement(y,o({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<r;u++)o[u]=n[u];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},451:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>y,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var l=n(7462),a=(n(7294),n(3905));const r={last_update:{date:new Date("2025-10-01T13:56:30.747Z")},tags:["python"]},o="Tuple",i={unversionedId:"language/python/tuple",id:"language/python/tuple",title:"Tuple",description:"Tuples are  immutable  sequences",source:"@site/docs/language/python/7_tuple.mdx",sourceDirName:"language/python",slug:"/language/python/tuple",permalink:"/recaller/docs/language/python/tuple",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/language/python/7_tuple.mdx",tags:[{label:"python",permalink:"/recaller/docs/tags/python"}],version:"current",lastUpdatedAt:1759326990.747,formattedLastUpdatedAt:"Oct 1, 2025",sidebarPosition:7,frontMatter:{last_update:{date:"2025-10-01T13:56:30.747Z"},tags:["python"]},sidebar:"default",previous:{title:"Set",permalink:"/recaller/docs/language/python/set"},next:{title:"del statement",permalink:"/recaller/docs/language/python/delete-statement"}},p={},u=[{value:"Tuple compreshension",id:"tuple-compreshension",level:2},{value:"<code>namedtuple</code>",id:"namedtuple",level:2},{value:"Methods",id:"methods",level:3},{value:"<code>_make</code>",id:"_make",level:4},{value:"<code>_asdict</code>",id:"_asdict",level:4}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},c=s("Color"),m=s("Admonition"),d={toc:u};function y(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,l.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tuple"},"Tuple"),(0,a.kt)("p",null,"Tuples are ",(0,a.kt)(c,{color:"var(--primary-font-color)",mdxType:"Color"}," immutable ")," sequences"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"t = (12345, 54321, 'hello!')  # or declare without (). eg, t = 12345, 54321, 'hello!'\nt[0]\n# 12345\nt\n# (12345, 54321, 'hello!')\n\n\n# Tuples are immutable:\nt[0] = 88888\n#  highlight-error-next-line\n# TypeError: 'tuple' object does not support item assignment\n")),(0,a.kt)("p",null,"Tuples may be nested:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"u = ( t, (1, 2, 3, 4, 5) )\nu\n# ((12345, 54321, 'hello!'), (1, 2, 3, 4, 5))\n")),(0,a.kt)(m,{type:"caution",title:"caution",mdxType:"Admonition"},(0,a.kt)("p",null,"Single item tuple is constructed with trailing comma, ",(0,a.kt)("inlineCode",{parentName:"p"},",")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},'this_is_interpreted_as_string = ("hello")\n\nthis_is_tuple = ("hello",) # notice trailing comma\nthis_is_also_tuple = "hello", # notice trailing comma\n'))),(0,a.kt)(m,{type:"info",title:"info",mdxType:"Admonition"},(0,a.kt)("p",null,"Empty tuple syntax: ",(0,a.kt)("inlineCode",{parentName:"p"},"empty = ()"))),(0,a.kt)("h2",{id:"tuple-compreshension"},"Tuple compreshension"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"my_tuple = tuple( x + 2 for x in [1,2,3,4] )\n")),(0,a.kt)("h2",{id:"namedtuple"},(0,a.kt)("inlineCode",{parentName:"h2"},"namedtuple")),(0,a.kt)("p",null,"It is like tuple additionally each item can be access by name"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"from collections import namedtuple\n\nMyTuple = namedtuple('MyTuple' , ['key1' , 'key2'])\nprint(MyTuple)\n# <class '__main__.MyTuple'>\n\nmy_tuple_instance = MyTuple(\"key1_value\" , key2=\"key2_value\")\n\nprint(my_tuple_instance.key1 , my_tuple_instance.key2)\n# key1_value key2_value\n\nprint(my_tuple_instance[0] , my_tuple_instance[1])\n# key1_value key2_value\n")),(0,a.kt)("p",null,"2nd argument of ",(0,a.kt)("inlineCode",{parentName:"p"},"namedtuple"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"field_name")," can be"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"list of string. ",(0,a.kt)("inlineCode",{parentName:"li"},'["key1", "key2"]')),(0,a.kt)("li",{parentName:"ul"},"a string with white spaces. ",(0,a.kt)("inlineCode",{parentName:"li"},'"key1 key2"')),(0,a.kt)("li",{parentName:"ul"},"a string with commas. ",(0,a.kt)("inlineCode",{parentName:"li"},'"key1, key2"'))),(0,a.kt)("p",null,"each field name need to be a valid string that can used to crate attribute name"),(0,a.kt)(m,{type:"note",title:"note",mdxType:"Admonition"},(0,a.kt)("p",null,"Field name can not start with underscore, ",(0,a.kt)("inlineCode",{parentName:"p"},"_"),". ")),(0,a.kt)(m,{type:"info",title:"info",mdxType:"Admonition"},(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"namedtuple")," is a subclass of tuple.")),(0,a.kt)("h3",{id:"methods"},"Methods"),(0,a.kt)("h4",{id:"_make"},(0,a.kt)("inlineCode",{parentName:"h4"},"_make")),(0,a.kt)("p",null,"create ",(0,a.kt)("inlineCode",{parentName:"p"},"namedtuple")," instance from iterable"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"MyTuple = namedtuple('MyTuple' , ['key1' , 'key2'])\n\nins = MyTuple._make(['key1_value', 'key2_value'])\n# MyTuple(key1='key1_value', key2='key2_value')\n")),(0,a.kt)("h4",{id:"_asdict"},(0,a.kt)("inlineCode",{parentName:"h4"},"_asdict")),(0,a.kt)("p",null,"return dict representing tuple"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"title= showLineNumbers",title:"",showLineNumbers:!0},"MyTuple = namedtuple('MyTuple' , ['key1' , 'key2'])\n\nins = MyTuple('key1_value', 'key2_value')\n# highlight-next-line\nins._asdict()\n# {'key1': 'key1_value', 'key2': 'key2_value'}\n")),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h1",{id:"sources"},"Sources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences"},"https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/collections.html#collections.namedtuple"},"https://docs.python.org/3/library/collections.html#collections.namedtuple"))))}y.isMDXComponent=!0}}]);